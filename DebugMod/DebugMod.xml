<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DebugMod</name>
    </assembly>
    <members>
        <member name="M:DebugMod.DebugMod.AddTopMenuContent(System.String,System.Collections.Generic.List{DebugMod.TopMenuButton})">
            <summary>
            Adds a menu to the top menu, with the provided name and button list.
            </summary>
        </member>
        <member name="M:DebugMod.DebugMod.AddToKeyBindList(System.Type)">
            <summary>
            Add all public static methods on a type to the keybinds list. Methods must be decorated with the BindableMethod attribute.
            </summary>
        </member>
        <member name="M:DebugMod.DebugMod.AddActionToKeyBindList(System.Action,System.String,System.String)">
            <summary>
            Add an action to the keybinds list.
            </summary>
        </member>
        <member name="M:DebugMod.DebugMod.AddActionToKeyBindList(System.Action,System.String,System.String,System.Boolean)">
            <summary>
            Add an action to the keybinds list.
            </summary>
        </member>
        <member name="M:DebugMod.GUIController.ForceHideUI">
            <summary>
            If this returns true, all DebugMod UI elements will be hidden.
            </summary>
        </member>
        <member name="T:DebugMod.InfoPanel">
            <summary>
            Represents an info panel in the style of the standard info panel
            </summary>
        </member>
        <member name="P:DebugMod.InfoPanel.Active">
            <summary>
            Determine whether the panel should be displayed.
            </summary>
        </member>
        <member name="M:DebugMod.InfoPanel.BuildPanel(UnityEngine.GameObject)">
            <summary>
            Called once to set up the panel.
            </summary>
        </member>
        <member name="M:DebugMod.InfoPanel.UpdatePanel">
            <summary>
            Called every frame to change the text on the panel.
            </summary>
        </member>
        <member name="M:DebugMod.InfoPanel.CreateCustomInfoPanel(System.String,System.Boolean)">
            <summary>
            Create a new Custom Info Panel with the given name.
            </summary>
            <param name="Name">The name of the panel - this will not be displayed.</param>
            <param name="ShowSprite">Whether to place the panel on the background sprite.</param>
        </member>
        <member name="M:DebugMod.InfoPanel.AddInfoToPanel(System.String,System.Single,System.Single,System.Single,System.String,System.Func{System.String})">
            <summary>
            Add an info entry to the specified info panel.
            </summary>
            <param name="Name">The name of the panel.</param>
            <param name="xLabel">The x coordinate of the label.</param>
            <param name="xInfo">The x coordinate of the info string.</param>
            <param name="y">The y coordinate of the entry.</param>
            <param name="label">The text to display on the label.</param>
            <param name="textFunc">A function that returns the text to show on the info string; will be called every frame.</param>
        </member>
        <member name="M:DebugMod.InfoPanel.CreateSimpleInfoPanel(System.String,System.Single)">
            <summary>
            Create a new Simple Info Panel with the given name.
            </summary>
            <param name="Name">The name of the panel - this will not be displayed.</param>
            <param name="sep">The separation between the columns.</param>
        </member>
        <member name="M:DebugMod.InfoPanel.AddInfoToSimplePanel(System.String,System.String,System.Func{System.String})">
            <summary>
            Add an info entry to the specified simple info panel.
            </summary>
            <param name="Name">The name of the panel.</param>
            <param name="label">The text to display on the label.</param>
            <param name="textFunc">A function that returns the text to show on the info string; will be called every frame.</param>
        </member>
        <member name="M:DebugMod.InfoPanel.AddInfoPanel(System.String,DebugMod.InfoPanels.TogglableInfoPanel)">
            <summary>
            Add an info panel to the rotation. Must be done during mod initialization.
            </summary>
            <param name="Name">The name of the panel.</param>
            <param name="p">The panel to add.</param>
            <exception cref="T:System.InvalidOperationException">A panel with this name already exists.</exception>
        </member>
        <member name="T:DebugMod.InfoPanels.SimpleInfoPanel">
            <summary>
            Creates an input panel which is a single column of info.
            </summary>
        </member>
        <member name="T:DebugMod.InfoPanels.TogglableInfoPanel">
            <summary>
            Represents an info panel which is part of the toggle rotation.
            </summary>
        </member>
        <member name="M:DebugMod.MethodHelpers.VisualMaskHelper.DeactivateVisualMasks(System.Collections.Generic.IEnumerable{UnityEngine.GameObject})">
            <summary>
            Deactivate all renderers attached to objects that DebugMod recongises as being a visual mask.
            </summary>
            <param name="gos">The game objects to iterate over.</param>
            <returns>The number of renderers disabled.</returns>
        </member>
        <member name="M:DebugMod.MethodHelpers.VisualMaskHelper.DisableVignette(System.Boolean)">
            <summary>
            Disable the Vignette, as well as all renderers in its children.
            </summary>
            <param name="includeChildren">If this is false, do not disable renderers in the vignette's children.</param>
        </member>
        <member name="T:DebugMod.SaveState">
            <summary>
            Handles struct SaveStateData and individual SaveState operations
            </summary>
        </member>
    </members>
</doc>
